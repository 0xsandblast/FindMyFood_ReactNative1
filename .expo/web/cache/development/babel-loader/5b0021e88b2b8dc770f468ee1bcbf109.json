{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\clemc\\\\OneDrive\\\\Bureau\\\\ISEP\\\\JuniorISEP\\\\JAC\\\\FindMyFood_ReactNative1\\\\Navigation\\\\navGlobal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"../screens/1Home\";\nimport MapScreen from \"../screens/2Map\";\nimport PublishScreen from \"../screens/3Publish\";\nimport MessageScreen from \"../screens/4Message\";\nimport ProfileScreen from \"../screens/5Profile\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nvar Tab = createBottomTabNavigator();\n\nvar Navigator = function (_React$Component) {\n  _inherits(Navigator, _React$Component);\n\n  var _super = _createSuper(Navigator);\n\n  function Navigator() {\n    _classCallCheck(this, Navigator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Navigator, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused;\n              var iconName;\n\n              if (route.name === 'HomeScreen') {\n                iconName = focused ? 'home' : 'home-outline';\n              } else if (route.name === 'MapScreen') {\n                iconName = focused ? 'map' : 'map-outline';\n              } else if (route.name === 'PublishScreen') {\n                iconName = focused ? 'camera' : 'camera-outline';\n              } else if (route.name === 'MessageScreen') {\n                iconName = focused ? 'chatbubble' : 'chatbubble-outline';\n              } else if (route.name === 'ProfileScreen') {\n                iconName = focused ? 'person-circle' : 'person-circle-outline';\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: 31,\n                color: \"white\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 36\n                }\n              });\n            }\n          };\n        },\n        tabBarOptions: {\n          showLabel: false,\n          activeBackgroundColor: '#FFCD00',\n          inactiveBackgroundColor: '#FFCD00'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"HomeScreen\",\n        component: HomeScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"MapScreen\",\n        component: MapScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"PublishScreen\",\n        component: PublishScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"MessageScreen\",\n        component: MessageScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"ProfileScreen\",\n        component: ProfileScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Navigator;\n}(React.Component);\n\nexport default Navigator;","map":{"version":3,"sources":["C:/Users/clemc/OneDrive/Bureau/ISEP/JuniorISEP/JAC/FindMyFood_ReactNative1/Navigation/navGlobal.js"],"names":["React","NavigationContainer","createBottomTabNavigator","HomeScreen","MapScreen","PublishScreen","MessageScreen","ProfileScreen","Ionicons","Tab","Navigator","route","tabBarIcon","focused","iconName","name","showLabel","activeBackgroundColor","inactiveBackgroundColor","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\nimport HomeScreen from '../screens/1Home';\r\nimport MapScreen from '../screens/2Map';\r\nimport PublishScreen from '../screens/3Publish';\r\nimport MessageScreen from '../screens/4Message';\r\nimport ProfileScreen from '../screens/5Profile';\r\n\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nclass Navigator extends React.Component {\r\n    render() {\r\n        return (\r\n            <NavigationContainer>\r\n                <Tab.Navigator\r\n                    screenOptions={({ route }) => ({\r\n                        tabBarIcon: ({ focused }) => {\r\n                            let iconName;\r\n                \r\n                            if (route.name === 'HomeScreen') {\r\n                            iconName = focused\r\n                                ? 'home'\r\n                                : 'home-outline';\r\n                            } \r\n                            \r\n                            else if (route.name === 'MapScreen') {\r\n                            iconName = focused ? 'map' : 'map-outline';\r\n                            }\r\n                            \r\n                            else if (route.name === 'PublishScreen') {\r\n                            iconName = focused ? 'camera' : 'camera-outline';\r\n                            }\r\n                            \r\n                            else if (route.name === 'MessageScreen') {\r\n                            iconName = focused ? 'chatbubble' : 'chatbubble-outline';\r\n                            }\r\n                            \r\n                            else if (route.name === 'ProfileScreen') {\r\n                            iconName = focused ? 'person-circle' : 'person-circle-outline';\r\n                            }\r\n                \r\n                            return <Ionicons name={iconName} size={31} color='white' />;\r\n                        },\r\n                        \r\n                        })}\r\n                        tabBarOptions={{\r\n                            showLabel:false,\r\n                            activeBackgroundColor:'#FFCD00',\r\n                            inactiveBackgroundColor:'#FFCD00',\r\n                        }}\r\n\r\n                >\r\n                    <Tab.Screen name=\"HomeScreen\" component={HomeScreen}/>\r\n                    <Tab.Screen name=\"MapScreen\" component={MapScreen} />\r\n                    <Tab.Screen name=\"PublishScreen\" component={PublishScreen} />\r\n                    <Tab.Screen name=\"MessageScreen\" component={MessageScreen} />\r\n                    <Tab.Screen name=\"ProfileScreen\" component={ProfileScreen} />\r\n                </Tab.Navigator>\r\n            </NavigationContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigator;"]},"metadata":{},"sourceType":"module"}